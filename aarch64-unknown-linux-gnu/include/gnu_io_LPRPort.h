/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class gnu_io_LPRPort */

#ifndef _Included_gnu_io_LPRPort
#define _Included_gnu_io_LPRPort
#ifdef __cplusplus
extern "C" {
#endif
#undef gnu_io_LPRPort_debug
#define gnu_io_LPRPort_debug 0L
#undef gnu_io_LPRPort_LPT_MODE_ANY
#define gnu_io_LPRPort_LPT_MODE_ANY 0L
#undef gnu_io_LPRPort_LPT_MODE_SPP
#define gnu_io_LPRPort_LPT_MODE_SPP 1L
#undef gnu_io_LPRPort_LPT_MODE_PS2
#define gnu_io_LPRPort_LPT_MODE_PS2 2L
#undef gnu_io_LPRPort_LPT_MODE_EPP
#define gnu_io_LPRPort_LPT_MODE_EPP 3L
#undef gnu_io_LPRPort_LPT_MODE_ECP
#define gnu_io_LPRPort_LPT_MODE_ECP 4L
#undef gnu_io_LPRPort_LPT_MODE_NIBBLE
#define gnu_io_LPRPort_LPT_MODE_NIBBLE 5L
#undef gnu_io_LPRPort_debug
#define gnu_io_LPRPort_debug 0L
/*
 * Class:     gnu_io_LPRPort
 * Method:    Initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_Initialize
  (JNIEnv *, jclass);

/*
 * Class:     gnu_io_LPRPort
 * Method:    open
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_open
  (JNIEnv *, jobject, jstring);

/*
 * Class:     gnu_io_LPRPort
 * Method:    setLPRMode
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_LPRPort_setLPRMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     gnu_io_LPRPort
 * Method:    isPaperOut
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_LPRPort_isPaperOut
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    isPrinterBusy
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_LPRPort_isPrinterBusy
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    isPrinterError
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_LPRPort_isPrinterError
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    isPrinterSelected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_LPRPort_isPrinterSelected
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    isPrinterTimedOut
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_LPRPort_isPrinterTimedOut
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    nativeClose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_nativeClose
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    setInputBufferSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_setInputBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     gnu_io_LPRPort
 * Method:    getInputBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_getInputBufferSize
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    setOutputBufferSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_setOutputBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     gnu_io_LPRPort
 * Method:    getOutputBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_getOutputBufferSize
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    getOutputBufferFree
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_getOutputBufferFree
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    writeByte
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_writeByte
  (JNIEnv *, jobject, jint);

/*
 * Class:     gnu_io_LPRPort
 * Method:    writeArray
 * Signature: ([BII)V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_writeArray
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     gnu_io_LPRPort
 * Method:    drain
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_drain
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    nativeavailable
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_nativeavailable
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    readByte
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_readByte
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_LPRPort
 * Method:    readArray
 * Signature: ([BII)I
 */
JNIEXPORT jint JNICALL Java_gnu_io_LPRPort_readArray
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     gnu_io_LPRPort
 * Method:    eventLoop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_LPRPort_eventLoop
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
